{"version":3,"file":"component---src-pages-index-tsx-2d028a62e5ebb048b289.js","mappings":"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","sources":["webpack://ggc-distance/./src/components/selectAll.ts","webpack://ggc-distance/./src/judge/arrayTools.ts","webpack://ggc-distance/./src/judge/calculationTools.ts","webpack://ggc-distance/./src/judge/calculateFinal.ts","webpack://ggc-distance/./node_modules/klona/dist/index.mjs","webpack://ggc-distance/./src/judge/calculateIncompleteFinal.ts","webpack://ggc-distance/./src/judge/JudgeStore.ts","webpack://ggc-distance/./src/judge/Judge.tsx","webpack://ggc-distance/./src/pages/index.tsx"],"sourcesContent":["export default (e: React.FocusEvent<HTMLInputElement>) =>\r\n  setTimeout(() => e.target.setSelectionRange(0, 10), 1);\r\n","export function arrayWithZeros(n: number) {\r\n  return Array.from({ length: n }, () => 0);\r\n}\r\n\r\nexport function arrayWithIndex(n: number) {\r\n  return Array.from({ length: n }, (_, i) => i);\r\n}\r\nexport function array2dWithZeros(n: number, m: number) {\r\n  return Array.from({ length: n }, () => arrayWithZeros(m));\r\n}\r\n\r\n","import { array2dWithZeros } from \"./arrayTools\";\r\nimport { FinalMarks, Place } from \"./JudgeTypes\";\r\n\r\nexport function sortAndGroupSame<T>(\r\n  values: T[],\r\n  comparator: (a: T, b: T) => number\r\n): T[][] {\r\n  if (values.length == 0) return [];\r\n  if (values.length == 1) return [values];\r\n\r\n  const sorted = values.sort(comparator);\r\n\r\n  const result: T[][] = [];\r\n  let last = 0;\r\n  for (let first = 0; first < sorted.length; first = last) {\r\n    last = first + 1;\r\n    while (\r\n      last < sorted.length &&\r\n      comparator(sorted[first]!!, sorted[last]!!) == 0\r\n    )\r\n      last++;\r\n\r\n    result.push(sorted.slice(first, last));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function combineMarks(\r\n  marks: FinalMarks[],\r\n  competitors: number,\r\n  judges: number\r\n): number[][] {\r\n  const result = array2dWithZeros(competitors, judges);\r\n  let jIndex = 0;\r\n  for (const dance of marks) {\r\n    for (let c = 0; c < competitors; c++) {\r\n      for (let j = 0; j < dance.judges; j++) {\r\n        result[c]!![j + jIndex] = dance.marks[c]!![j]!!;\r\n      }\r\n    }\r\n    jIndex += dance.judges;\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function exactPlace(n: number) {\r\n  return {\r\n    from: n,\r\n    to: n,\r\n  };\r\n}\r\n\r\nexport function getPlaceValue(place?: Place) {\r\n  if (!place) return 0;\r\n  return (place.from + place.to) / 2;\r\n}\r\n","import { array2dWithZeros, arrayWithIndex, arrayWithZeros } from \"./arrayTools\";\r\nimport {\r\n  combineMarks,\r\n  exactPlace,\r\n  getPlaceValue,\r\n  sortAndGroupSame,\r\n} from \"./calculationTools\";\r\nimport { FinalMarks, Place, ResultTable } from \"./JudgeTypes\";\r\n\r\nexport function calculateMajority(\r\n  judgement: FinalMarks,\r\n  onlyFor?: number[],\r\n  place?: number\r\n) {\r\n  const majority = Math.floor(judgement.judges / 2) + 1;\r\n\r\n  const competitorValues: {\r\n    majority: number[];\r\n    sum: number[];\r\n    index: number;\r\n  }[] = [];\r\n  for (let c = 0; c < judgement.competitors; c++) {\r\n    const countMajority = arrayWithZeros(judgement.competitors + 1);\r\n    const countSums = arrayWithZeros(judgement.competitors + 1);\r\n    for (let j = 0; j < judgement.judges; j++) {\r\n      const mark = judgement.marks[c]?.[j] ?? 0;\r\n      if (mark > 0)\r\n        for (let m = mark; m <= judgement.competitors; m++) {\r\n          countMajority[m]++;\r\n          countSums[m] += mark;\r\n        }\r\n    }\r\n    competitorValues[c] = { majority: countMajority, sum: countSums, index: c };\r\n  }\r\n\r\n  let remaining = onlyFor || arrayWithIndex(judgement.competitors);\r\n  const table: ResultTable = arrayWithIndex(judgement.competitors).map((i) =>\r\n    arrayWithZeros(judgement.competitors + 1).map((i) => undefined)\r\n  );\r\n  const places: Place[] = [];\r\n  let lookingFor = place || 1;\r\n\r\n  let column = lookingFor;\r\n  while (remaining.length && column <= judgement.competitors) {\r\n    let byMaxMajority = sortAndGroupSame(\r\n      remaining\r\n        .map((r) => competitorValues[r]!!)\r\n        .map((a) => {\r\n          const val = a?.majority[column];\r\n          const tableEntry = table[a?.index || 0];\r\n          if (tableEntry) tableEntry[column] = val == 0 ? \"-\" : val?.toString();\r\n          return a;\r\n        })\r\n        .filter((m) => (m?.majority[column] || 0) >= majority)\r\n        .map((v) => ({\r\n          index: v.index,\r\n          majority: v.majority.slice(column),\r\n          sum: v.sum.slice(column),\r\n        })),\r\n      (a, b) => {\r\n        for (let sortColumn = 0; sortColumn < a.majority.length; sortColumn++) {\r\n          const tableColumn = column + sortColumn;\r\n          table[a.index]!![tableColumn] = a.majority[sortColumn]!!.toString();\r\n          table[b.index]!![tableColumn] = b.majority[sortColumn]!!.toString();\r\n          const sortingByMajority =\r\n            (b.majority[sortColumn] || 0) - (a.majority[sortColumn] || 0);\r\n          if (sortingByMajority) return sortingByMajority;\r\n\r\n          table[a.index]!![tableColumn] += \"\\xA0(\" + a.sum[sortColumn] + \")\";\r\n          table[b.index]!![tableColumn] += \"\\xA0(\" + b.sum[sortColumn] + \")\";\r\n          const sortingBySum =\r\n            (a.sum[sortColumn] || 0) - (b.sum[sortColumn] || 0);\r\n          if (sortingBySum) return sortingBySum;\r\n        }\r\n        return 0;\r\n      }\r\n    );\r\n\r\n    for (const group of byMaxMajority) {\r\n      for (const c of group) {\r\n        places[c.index] = {\r\n          from: lookingFor,\r\n          to: lookingFor + group.length - 1,\r\n        };\r\n        remaining = remaining.filter((i) => i != c.index);\r\n      }\r\n      lookingFor += group.length;\r\n    }\r\n\r\n    column++;\r\n  }\r\n  return { places, table };\r\n}\r\n\r\nexport function calculateSkating(\r\n  dances: { marks: FinalMarks; places: Place[] }[]\r\n) {\r\n  if (dances.length < 1) return;\r\n  const competitors = dances[0]?.marks.competitors || 0;\r\n  if (!competitors) return;\r\n\r\n  const places: Place[] = arrayWithZeros(competitors).map((i) =>\r\n    exactPlace(i + 1)\r\n  );\r\n\r\n  const sum = arrayWithZeros(competitors);\r\n  const placeCount = array2dWithZeros(competitors, competitors + 1);\r\n  const placeSum = array2dWithZeros(competitors, competitors + 1);\r\n\r\n  const judges = dances.map((i) => i.marks.judges).reduce((a, b) => a + b);\r\n  const skatingJudgement: FinalMarks = {\r\n    competitors,\r\n    judges,\r\n    marks: combineMarks(\r\n      dances.map((i) => i.marks),\r\n      competitors,\r\n      judges\r\n    ),\r\n  };\r\n\r\n  let skatingTable: ResultTable = [];\r\n  let skatingPlaces: Place[] = [];\r\n\r\n  const table: string[][] = array2dWithZeros(\r\n    competitors,\r\n    dances.length + 1\r\n  ).map((i) => i.map(() => \"\"));\r\n\r\n  for (let d = 0; d < dances.length; d++) {\r\n    const dance = dances[d]!!;\r\n    for (let c = 0; c < competitors; c++) {\r\n      const place = getPlaceValue(dance.places[c]);\r\n      table[c]!![d] = place.toString();\r\n      sum[c] += place;\r\n      for (let m = competitors; m >= place; m--) {\r\n        placeCount[c]!![m]++;\r\n        placeSum[c]!![m] += place;\r\n      }\r\n    }\r\n  }\r\n  for (let c = 0; c < competitors; c++) {\r\n    table[c]!![dances.length] = sum[c]!!.toString();\r\n  }\r\n\r\n  const sortedGroups = sortAndGroupSame(\r\n    arrayWithIndex(competitors),\r\n    (a, b) => sum[a]!! - sum[b]!!\r\n  );\r\n\r\n  let place = 1;\r\n  for (const group of sortedGroups) {\r\n    if (group.length == 1) {\r\n      const c = group[0]!!;\r\n      places[c] = exactPlace(place);\r\n      table[c]!![dances.length + 1] = getPlaceValue(places[c]).toString();\r\n      place++;\r\n    } else {\r\n      let remaining = group;\r\n      const tableCol = arrayWithZeros(competitors).map(() => dances.length + 1);\r\n      for (const c of remaining) {\r\n        table[c]!![dances.length + 1] = \"punktgleich für \" + place + \".\";\r\n      }\r\n      while (remaining.length > 0) {\r\n        const byCount = sortAndGroupSame(remaining, (a, b) => {\r\n          return placeCount[b]!![place]!! - placeCount[a]!![place]!!;\r\n        })[0]!!;\r\n\r\n        const firstBySum = sortAndGroupSame(byCount, (a, b) => {\r\n          return placeSum[a]!![place]!! - placeSum[b]!![place]!!;\r\n        })[0]!!;\r\n\r\n        if (firstBySum.length == 1) {\r\n          const c = firstBySum[0]!!;\r\n          places[c] = exactPlace(place);\r\n          table[c]!![tableCol[c]!! + 1] = getPlaceValue(places[c]).toString();\r\n\r\n          remaining = remaining.filter((i) => i != c);\r\n          place++;\r\n        } else {\r\n          for (const c of firstBySum) {\r\n            table[c]!![tableCol[c]!! + 1] = \"punktgleich für \" + place + \".\";\r\n          }\r\n          const skating11Result = calculateMajority(\r\n            skatingJudgement,\r\n            firstBySum,\r\n            place\r\n          );\r\n\r\n          for (let row = 0; row < skating11Result.table.length; row++) {\r\n            for (\r\n              let col = 0;\r\n              col < skating11Result.table[row]!!.length;\r\n              col++\r\n            ) {\r\n              const n = skating11Result.table[row]!![col]!!;\r\n              const o = skatingTable[row]?.[col] || \"\";\r\n              skating11Result.table[row]!![col] = n > o ? n : o;\r\n            }\r\n          }\r\n          skatingTable = skating11Result.table;\r\n\r\n          const rule11 = sortAndGroupSame(\r\n            firstBySum,\r\n            (a, b) =>\r\n              getPlaceValue(skating11Result.places[a]!!) -\r\n              getPlaceValue(skating11Result.places[b]!!)\r\n          );\r\n\r\n          for (let i = 0; i < rule11.length; i++) {\r\n            const rule11Winner = rule11[i]!!;\r\n            if (i > 0 && (rule11.length > 2 || rule11Winner.length > 1)) {\r\n              for (const c of rule11Winner) {\r\n                tableCol[c] += 2;\r\n              }\r\n              continue;\r\n            }\r\n\r\n            for (const c of rule11Winner) {\r\n              places[c] = {\r\n                from: place,\r\n                to: place + rule11Winner.length - 1,\r\n              };\r\n              skatingPlaces[c] = skating11Result.places[c]!!;\r\n              table[c]!![tableCol[c]!! + 2] = getPlaceValue(\r\n                places[c]\r\n              ).toString();\r\n              remaining = remaining.filter((i) => i != c);\r\n            }\r\n            place += rule11Winner.length;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return { places, table, skatingTable, skatingPlaces };\r\n}\r\n","export function klona(x) {\n  if (typeof x !== 'object') return x;\n  var k,\n      tmp,\n      str = Object.prototype.toString.call(x);\n\n  if (str === '[object Object]') {\n    if (x.constructor !== Object && typeof x.constructor === 'function') {\n      tmp = new x.constructor();\n\n      for (k in x) {\n        if (x.hasOwnProperty(k) && tmp[k] !== x[k]) {\n          tmp[k] = klona(x[k]);\n        }\n      }\n    } else {\n      tmp = {}; // null\n\n      for (k in x) {\n        if (k === '__proto__') {\n          Object.defineProperty(tmp, k, {\n            value: klona(x[k]),\n            configurable: true,\n            enumerable: true,\n            writable: true\n          });\n        } else {\n          tmp[k] = klona(x[k]);\n        }\n      }\n    }\n\n    return tmp;\n  }\n\n  if (str === '[object Array]') {\n    k = x.length;\n\n    for (tmp = Array(k); k--;) {\n      tmp[k] = klona(x[k]);\n    }\n\n    return tmp;\n  }\n\n  if (str === '[object Set]') {\n    tmp = new Set();\n    x.forEach(function (val) {\n      tmp.add(klona(val));\n    });\n    return tmp;\n  }\n\n  if (str === '[object Map]') {\n    tmp = new Map();\n    x.forEach(function (val, key) {\n      tmp.set(klona(key), klona(val));\n    });\n    return tmp;\n  }\n\n  if (str === '[object Date]') {\n    return new Date(+x);\n  }\n\n  if (str === '[object RegExp]') {\n    tmp = new RegExp(x.source, x.flags);\n    tmp.lastIndex = x.lastIndex;\n    return tmp;\n  }\n\n  if (str === '[object DataView]') {\n    return new x.constructor(klona(x.buffer));\n  }\n\n  if (str === '[object ArrayBuffer]') {\n    return x.slice(0);\n  } // ArrayBuffer.isView(x)\n  // ~> `new` bcuz `Buffer.slice` => ref\n\n\n  if (str.slice(-6) === 'Array]') {\n    return new x.constructor(x);\n  }\n\n  return x;\n}","import { klona } from \"klona\";\r\nimport { arrayWithZeros } from \"./arrayTools\";\r\nimport { calculateMajority } from \"./calculateFinal\";\r\nimport { exactPlace, getPlaceValue } from \"./calculationTools\";\r\nimport { FinalMarks, PossiblePlace, ResultTable } from \"./JudgeTypes\";\r\n\r\nexport function calculateIncompleteMajority(marks: FinalMarks) {\r\n  const judgement = klona(marks);\r\n\r\n  let setCount = 0;\r\n\r\n  let competitorSet: boolean[] = [];\r\n  const markCount: number[] = arrayWithZeros(judgement.competitors + 1);\r\n  for (let c = 0; c < judgement.competitors; c++) {\r\n    competitorSet[c] = true;\r\n    for (let j = 0; j < judgement.judges; j++) {\r\n      const mark = judgement.marks[c]?.[j] || 0;\r\n      if (mark <= 0 || mark > judgement.competitors) {\r\n        competitorSet[c] = false;\r\n        break;\r\n      }\r\n    }\r\n    if (competitorSet[c]) {\r\n      for (let j = 0; j < judgement.judges; j++) {\r\n        const mark = judgement.marks[c]?.[j] || 0;\r\n        markCount[mark]++;\r\n      }\r\n      setCount++;\r\n    }\r\n  }\r\n\r\n  function distributeMissing(countGood: number) {\r\n    const unset = competitorSet\r\n      .map((set, i) => (!set ? i : -1))\r\n      .filter((i) => i >= 0);\r\n\r\n    if (unset.length == 0) return;\r\n\r\n    const goodOnes = unset.filter((_, i) => i < countGood);\r\n    const badOnes = unset.filter((_, i) => i >= countGood);\r\n\r\n    const missingMarks = [];\r\n    for (let mark = judgement.competitors; mark > 0; mark--) {\r\n      missingMarks.push(\r\n        ...arrayWithZeros(judgement.judges - (markCount[mark] || 0)).map(\r\n          () => mark\r\n        )\r\n      );\r\n    }\r\n\r\n    for (const ones of [goodOnes, badOnes]) {\r\n      const sums = arrayWithZeros(judgement.competitors);\r\n      let sortedOnes = [...ones];\r\n      for (let j = 0; j < judgement.judges; j++) {\r\n        for (let i = 0; i < sortedOnes.length; i++) {\r\n          let markRow = judgement.marks[sortedOnes[i] || 0];\r\n          const mark = missingMarks.pop() || 0;\r\n          if (markRow) markRow[j] = mark;\r\n          sums[sortedOnes[i] || 0] += mark;\r\n        }\r\n        sortedOnes = sortedOnes.sort((a, b) => {\r\n          return -(sums[a] || 0) + (sums[b] || 0);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  let table: ResultTable | undefined;\r\n  let places: PossiblePlace[] = [];\r\n  const unsetPlace: PossiblePlace = {\r\n    from: exactPlace(judgement.competitors),\r\n    to: exactPlace(1),\r\n  };\r\n  for (let c = 0; c < judgement.competitors; c++) {\r\n    if (competitorSet[c])\r\n      places[c] = {\r\n        from: exactPlace(judgement.competitors),\r\n        to: exactPlace(1),\r\n      };\r\n    else places[c] = unsetPlace;\r\n  }\r\n  for (\r\n    let iteration = 0;\r\n    iteration <= judgement.competitors - setCount;\r\n    iteration++\r\n  ) {\r\n    distributeMissing(iteration);\r\n    const result = calculateMajority(judgement);\r\n    table = result.table;\r\n    for (let c = 0; c < judgement.competitors; c++) {\r\n      const possiblePlace = result.places[c];\r\n      if (!possiblePlace) continue;\r\n      const currentPlace = places[c];\r\n      if (currentPlace) {\r\n        if (getPlaceValue(currentPlace.from) > getPlaceValue(possiblePlace)) {\r\n          currentPlace.from = possiblePlace;\r\n        }\r\n        if (getPlaceValue(currentPlace.to) < getPlaceValue(possiblePlace)) {\r\n          currentPlace.to = possiblePlace;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (table && setCount < judgement.competitors - 1)\r\n    for (let c = 0; c < judgement.competitors; c++) {\r\n      if (!competitorSet[c])\r\n        table[c] = arrayWithZeros(judgement.competitors + 1).map((i) => \"\");\r\n    }\r\n\r\n  return { table, places };\r\n}\r\n","import debounce from \"debounce-fn\";\r\nimport { autorun, observable, reaction, runInAction } from \"mobx\";\r\nimport deepEqual from \"fast-deep-equal\";\r\nimport { array2dWithZeros, arrayWithIndex, arrayWithZeros } from \"./arrayTools\";\r\nimport Judge from \"./Judge\";\r\nimport { FinalMarks, Place, PossiblePlace, ResultTable } from \"./JudgeTypes\";\r\nimport { calculateSkating } from \"./calculateFinal\";\r\nimport { calculateIncompleteMajority } from \"./calculateIncompleteFinal\";\r\nimport { collapseTextChangeRangesAcrossMultipleVersions } from \"typescript\";\r\n\r\nfunction initMarks(m: FinalMarks): FinalMarks {\r\n  const marks: FinalMarks = {\r\n    ...m,\r\n    marks: array2dWithZeros(m.competitors, m.judges),\r\n  };\r\n\r\n  for (let c = 0; c < m.competitors; c++) {\r\n    for (let j = 0; j < m.judges; j++) {\r\n      marks.marks[c]!![j] = m.marks[c]?.[j] || 0;\r\n    }\r\n  }\r\n\r\n  return marks;\r\n}\r\n\r\ninterface Results {\r\n  results: {\r\n    table: ResultTable | undefined;\r\n    places: PossiblePlace[];\r\n  }[];\r\n  dances: number;\r\n  skating:\r\n    | {\r\n        places: Place[];\r\n        table: string[][];\r\n        skatingTable: ResultTable;\r\n        skatingPlaces: Place[];\r\n      }\r\n    | undefined;\r\n}\r\n\r\nconst JudgeStore = observable({\r\n  competitors: 6,\r\n  judges: 5,\r\n  marks: [\r\n    initMarks({\r\n      competitors: 6,\r\n      judges: 5,\r\n      marks: [],\r\n    }),\r\n  ],\r\n\r\n  results: undefined as Results | undefined,\r\n\r\n  setMark(dance: number, competitor: number, judge: number, mark: number) {\r\n    const competitorRow = this.marks[dance]?.marks[competitor];\r\n    if (competitorRow) competitorRow[judge] = mark;\r\n  },\r\n\r\n  setCompetitors(count: number) {\r\n    this.competitors = count;\r\n    for (let c = 0; c < this.marks.length; c++) {\r\n      this.marks[c] = initMarks({\r\n        ...this.marks[c]!!,\r\n        competitors: Math.min(9, count),\r\n      });\r\n    }\r\n  },\r\n\r\n  setJudges(count: number) {\r\n    this.judges = count;\r\n    for (let c = 0; c < this.marks.length; c++) {\r\n      this.marks[c] = initMarks({\r\n        ...this.marks[c]!!,\r\n        judges: Math.min(11, count),\r\n      });\r\n    }\r\n  },\r\n\r\n  setDances(count: number) {\r\n    const marks = [];\r\n    for (let c = 0; c < count; c++) {\r\n      marks[c] =\r\n        this.marks[c] ||\r\n        initMarks({\r\n          marks: [],\r\n          judges: this.judges,\r\n          competitors: this.competitors,\r\n        });\r\n    }\r\n    this.marks = marks;\r\n  },\r\n\r\n  delete() {\r\n    if (confirm(\"Alle Wertungen löschen?\")) {\r\n      for (let m = 0; m < this.marks.length; m++) {\r\n        this.marks[m] = initMarks({ ...this.marks[m]!!, marks: [] });\r\n      }\r\n    }\r\n  },\r\n\r\n  get valid(): { danceValid: boolean[]; valid: boolean[][][] } {\r\n    const valid = this.marks.map((i: FinalMarks) =>\r\n      i.marks.map((j) => j.map(() => true))\r\n    );\r\n    const danceValid = this.marks.map(() => true);\r\n    for (let d = 0; d < this.marks.length; d++) {\r\n      const dance = this.marks[d];\r\n      if (!dance) continue;\r\n      for (let j = 0; j < dance.judges; j++) {\r\n        const marks: number[] = [];\r\n        for (let c = 0; c < dance.competitors; c++) {\r\n          const mark = dance.marks[c]?.[j] || 0;\r\n          if (mark <= 0) {\r\n            danceValid[d] = false;\r\n          } else if (mark > dance.competitors) {\r\n            valid[d]!![c]!![j] = false;\r\n            danceValid[d] = false;\r\n          } else if ((marks[mark] ?? -1) >= 0) {\r\n            valid[d]!![c]!![j] = false;\r\n            valid[d]!![marks[mark]!!]!![j] = false;\r\n            danceValid[d] = false;\r\n          }\r\n          marks[mark] = c;\r\n        }\r\n      }\r\n    }\r\n    return { danceValid, valid };\r\n  },\r\n});\r\n\r\nconst data =\r\n  typeof window !== \"undefined\" && window.localStorage.getItem(\"final\");\r\n\r\nif (data) {\r\n  const jsonData = JSON.parse(data);\r\n  Object.assign(JudgeStore, jsonData);\r\n}\r\n\r\nautorun(\r\n  () => {\r\n    const data = JSON.stringify({\r\n      marks: JudgeStore.marks,\r\n      judges: JudgeStore.judges,\r\n      competitors: JudgeStore.competitors,\r\n    });\r\n    localStorage.setItem(\"final\", data);\r\n  },\r\n  { delay: 500 }\r\n);\r\n\r\nautorun(\r\n  () => {\r\n    const start = Date.now();\r\n    const results = JudgeStore.marks.map((dance: FinalMarks) =>\r\n      calculateIncompleteMajority(dance)\r\n    );\r\n\r\n    const skatingDances = JudgeStore.valid.danceValid\r\n      .map((valid, i) =>\r\n        valid\r\n          ? {\r\n              marks: JudgeStore.marks[i]!!,\r\n              places: results[i]?.places?.map((i) => i.from)!!,\r\n            }\r\n          : null\r\n      )\r\n      .filter((i) => !!i)\r\n      .map((i) => i!!);\r\n\r\n    const skating =\r\n      skatingDances.length > 1 ? calculateSkating(skatingDances) : undefined;\r\n\r\n    const d = { results, skating, dances: skatingDances.length };\r\n    runInAction(() => (JudgeStore.results = d));\r\n  },\r\n  { delay: 200 }\r\n);\r\nexport default JudgeStore;\r\n","import React from \"react\";\r\nimport { toJS } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  Container,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport selectAll from \"../components/selectAll\";\r\nimport { arrayWithIndex } from \"./arrayTools\";\r\nimport \"./judge.scss\";\r\nimport JudgeStore from \"./JudgeStore\";\r\nimport { Place, PossiblePlace, ResultTable } from \"./JudgeTypes\";\r\nimport { getPlaceValue } from \"./calculationTools\";\r\n\r\nconst store = JudgeStore;\r\n\r\nexport default observer(function Judge() {\r\n  useEffect(() => {\r\n    document.title = \"Finalrechner Majoritäts- & Skatingsystem\";\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Finalrechner Majoritäts- &amp; Skatingsystem</h1>\r\n      <p>Die Wertungen werden automatisch gespeichert.</p>\r\n      <FinalConfiguration />\r\n      <br />\r\n      <Button onClick={() => store.delete()}>Wertungen zurücksetzen</Button>\r\n      {store.marks.map((_, d) => {\r\n        return <DanceView dance={d} key={d} />;\r\n      })}\r\n      <SkatingResult />\r\n    </Container>\r\n  );\r\n});\r\n\r\nconst SkatingResult = observer(function SkatingResult() {\r\n  return !store.results?.skating ? null : (\r\n    <div className=\"dance-section\">\r\n      <h3>Gesamtergebnis</h3>\r\n      <FinalResult />\r\n      <h5 className=\"mt-2 mb-0\">Ergebnistabelle</h5>\r\n      <SkatingTableView\r\n        table={toJS(store.results.skating.table)}\r\n        places={store.results.skating.places}\r\n      />\r\n      {!!store.results.skating.skatingTable.length && (\r\n        <>\r\n          <h5 className=\"mt-2 mb-0\">Skatingtabelle</h5>\r\n          <ResultTableView\r\n            table={store.results.skating.skatingTable}\r\n            places={store.results.skating.skatingPlaces}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst DanceView = observer(function DanceView(props: { dance: number }) {\r\n  const d = props.dance;\r\n  const result = store.results?.results[d];\r\n\r\n  const [open, setOpen] = useState(() => false);\r\n\r\n  return (\r\n    <div key={d} className=\"dance-section\">\r\n      {store.marks.length > 1 && <h3>{d + 1}. Tanz</h3>}\r\n      <MarkInput dance={d} places={result?.places} />\r\n      <br />\r\n      {!!result?.table && (\r\n        <>\r\n          <Button size=\"sm\" onClick={() => setOpen(!open)}>\r\n            Wertungstabelle\r\n          </Button>\r\n          <Collapse isOpen={open}>\r\n            <ResultTableView table={result.table} places={result.places} />\r\n          </Collapse>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst MarkInput = observer(function MarkInput(props: {\r\n  dance: number;\r\n  places?: PossiblePlace[];\r\n}) {\r\n  const dance = store.marks[props.dance];\r\n  if (!dance) return null;\r\n  let inpIdx = props.dance * dance.competitors * dance.judges;\r\n\r\n  const focus = (idx: number) => {\r\n    const el = document.getElementById(\"im\" + idx) as HTMLInputElement;\r\n    el?.focus();\r\n    el?.select();\r\n  };\r\n\r\n  return (\r\n    <div className=\"mark-input\">\r\n      <table className=\"mark-input\">\r\n        <tbody>\r\n          {dance.marks.map((competitor, c) => (\r\n            <tr className=\"mark-row\" key={c}>\r\n              <td className=\"mark-label\">#{c + 1}</td>\r\n              {competitor.map((mark, m) => {\r\n                const myIdx = inpIdx++;\r\n                return (\r\n                  <td className=\"mark-input\" key={m}>\r\n                    <Input\r\n                      draggable=\"false\"\r\n                      onDragStart={(e) => e.preventDefault()}\r\n                      style={{\r\n                        backgroundColor:\r\n                          store.valid.valid[props.dance]?.[c]?.[m] === false\r\n                            ? \"#fcc\"\r\n                            : undefined,\r\n                      }}\r\n                      onContextMenu={(e) => e.preventDefault()}\r\n                      autoComplete=\"off\"\r\n                      id={\"im\" + myIdx}\r\n                      inputMode=\"numeric\"\r\n                      pattern=\"[0-9]*\"\r\n                      key={m}\r\n                      value={mark || \"\"}\r\n                      onFocus={selectAll}\r\n                      onKeyDown={(e) => {\r\n                        if (!competitor[m] && e.key == \"Backspace\") {\r\n                          e.preventDefault();\r\n                          focus(myIdx - 1);\r\n                        } else if (e.key == \"ArrowUp\") {\r\n                          e.preventDefault();\r\n                          focus(myIdx - store.judges);\r\n                        } else if (e.key == \"ArrowDown\") {\r\n                          e.preventDefault();\r\n                          focus(myIdx + store.judges);\r\n                        } else if (e.key == \"ArrowRight\") {\r\n                          e.preventDefault();\r\n                          focus(myIdx + 1);\r\n                        } else if (e.key == \"ArrowLeft\") {\r\n                          e.preventDefault();\r\n                          focus(myIdx - 1);\r\n                        }\r\n                      }}\r\n                      onInput={(e) => {\r\n                        const newValue = parseInt(e.currentTarget.value || \"0\");\r\n                        if (newValue >= 0 && newValue <= dance.competitors) {\r\n                          store.setMark(props.dance, c, m, newValue);\r\n                          if (newValue > 0)\r\n                            document\r\n                              .getElementById(\"im\" + (myIdx + 1))\r\n                              ?.focus();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </td>\r\n                );\r\n              })}\r\n              <td className=\"mark-label\">\r\n                {!!props.places && possiblePlaceString(props.places[c])}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n});\r\n\r\nfunction placeString(place?: Place) {\r\n  if (!place?.from || !place?.to) return \"-\";\r\n  else return getPlaceValue(place).toLocaleString();\r\n}\r\n\r\nfunction possiblePlaceString(possiblePlace?: PossiblePlace) {\r\n  if (!possiblePlace?.from || !possiblePlace?.to) return \"-\";\r\n  const fromVal = getPlaceValue(possiblePlace.from);\r\n  const toVal = getPlaceValue(possiblePlace.to);\r\n\r\n  if (fromVal == toVal) return fromVal.toLocaleString();\r\n  else return fromVal.toLocaleString() + \"-\" + toVal.toLocaleString();\r\n}\r\n\r\nconst ResultTableView = observer(function ResultTableView({\r\n  table,\r\n  places,\r\n}: {\r\n  table: ResultTable;\r\n  places: PossiblePlace[] | Place[];\r\n}) {\r\n  return (\r\n    <Table bordered responsive size=\"sm\" className=\"result-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Nr.</th>\r\n          {table[0]?.map(\r\n            (_, i) => i > 0 && <th key={i}>{i > 1 ? \"1-\" + i : i}</th>\r\n          )}\r\n          <th>Ergebnis</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {table.map((row, r) => (\r\n          <tr key={r}>\r\n            <td>#{r + 1}</td>\r\n            {row.map(\r\n              (column, c) =>\r\n                c > 0 && <td key={c}>{column === undefined ? \"—\" : column}</td>\r\n            )}\r\n            <td>\r\n              {places.length > r &&\r\n                !!places[r] &&\r\n                (typeof places[r]?.from == \"number\"\r\n                  ? placeString(places[r] as Place)\r\n                  : possiblePlaceString(places[r] as PossiblePlace))}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n});\r\n\r\nconst SkatingTableView = observer(function SkatingTableView({\r\n  table,\r\n  places,\r\n}: {\r\n  table: ResultTable;\r\n  places: Place[];\r\n}) {\r\n  const maxCols = Math.max(...table.map((r) => r.length));\r\n  const dances = JudgeStore.results?.dances || 0;\r\n\r\n  const ruleCols = maxCols - dances - 2;\r\n  const cols = arrayWithIndex(maxCols);\r\n\r\n  return (\r\n    <Table bordered responsive size=\"sm\" className=\"result-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Nr.</th>\r\n          {arrayWithIndex(dances).map((_, i) => (\r\n            <th key={i}>{i + 1}</th>\r\n          ))}\r\n          <th>Summe</th>\r\n          <th>Regel 9</th>\r\n          {arrayWithIndex(ruleCols).map((i) => (\r\n            <th key={i}>Regel {10 + (i % 2)}</th>\r\n          ))}\r\n          <th>Ergebnis</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {table.map((row, r) => (\r\n          <tr key={r}>\r\n            <td>#{r + 1}</td>\r\n            {cols.map((c) => {\r\n              const column = row[c];\r\n              let rowspan = 1;\r\n              if (column?.startsWith(\"punktgleich\")) {\r\n                if (table[r - 1]?.[c] == column) return null;\r\n                else {\r\n                  while (table[r + rowspan]?.[c] == column) rowspan++;\r\n                }\r\n              }\r\n              return (\r\n                <td key={c} rowSpan={rowspan}>\r\n                  {column === undefined ? \"—\" : column}\r\n                </td>\r\n              );\r\n            })}\r\n            <td>{placeString(places[r])}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n});\r\n\r\nconst FinalConfiguration = observer(function FinalConfiguration() {\r\n  return (\r\n    <div className=\"final-inputs\">\r\n      <form>\r\n        <InputGroup>\r\n          <InputGroupText>Teilnehmer</InputGroupText>\r\n          <Input\r\n            inputMode=\"numeric\"\r\n            pattern=\"[0-9]*\"\r\n            value={store.competitors}\r\n            onFocus={selectAll}\r\n            onChange={(e) => {\r\n              store.setCompetitors(parseInt(e.target.value || \"0\"));\r\n            }}\r\n            style={{ textAlign: \"right\" }}\r\n          ></Input>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputGroupText>Wertungsrichter</InputGroupText>\r\n          <Input\r\n            inputMode=\"numeric\"\r\n            pattern=\"[0-9]*\"\r\n            value={store.judges}\r\n            onFocus={selectAll}\r\n            onChange={(e) => {\r\n              store.setJudges(parseInt(e.target.value || \"0\"));\r\n            }}\r\n            style={{ textAlign: \"right\" }}\r\n          ></Input>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputGroupText>Tänze</InputGroupText>\r\n          <Input\r\n            inputMode=\"numeric\"\r\n            pattern=\"[0-9]*\"\r\n            value={store.marks.length}\r\n            onFocus={selectAll}\r\n            onChange={(e) => store.setDances(parseInt(e.target.value || \"0\"))}\r\n            style={{ textAlign: \"right\" }}\r\n          ></Input>\r\n        </InputGroup>\r\n      </form>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst FinalResult = observer(function FinalResult() {\r\n  const places = store.results?.skating?.places;\r\n  const result = store.results?.results;\r\n  if (!places || !result) return null;\r\n\r\n  return (\r\n    <div className=\"mark-input\">\r\n      <table className=\"mark-input\">\r\n        <tbody>\r\n          {arrayWithIndex(store.competitors).map((c) => (\r\n            <tr className=\"mark-row\" key={c}>\r\n              <td className=\"mark-label\">#{c + 1}</td>\r\n              {arrayWithIndex(store.marks.length).map((d) => {\r\n                return (\r\n                  <td className=\"mark-input\" key={d}>\r\n                    <form>\r\n                      <Input\r\n                        value={\r\n                          !store.valid.danceValid[d]\r\n                            ? \"\"\r\n                            : getPlaceValue(result[d]?.places[c]?.from) || \"\"\r\n                        }\r\n                        disabled={true}\r\n                      />\r\n                    </form>\r\n                  </td>\r\n                );\r\n              })}\r\n              <td className=\"mark-label\">{placeString(places[c])}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport BaseLayout from \"../components/BaseLayout\";\r\nimport Judge from \"../judge/Judge\";\r\n\r\nexport default function Index() {\r\n  return (\r\n    <BaseLayout title=\"Majoritäts- und Skatingrechner\">\r\n      <Judge />\r\n    </BaseLayout>\r\n  );\r\n}\r\n"],"names":["e","setTimeout","target","setSelectionRange","arrayWithZeros","n","Array","from","length","arrayWithIndex","_","i","array2dWithZeros","m","sortAndGroupSame","values","comparator","sorted","sort","result","last","first","push","slice","combineMarks","marks","competitors","judges","jIndex","dance","c","j","exactPlace","to","getPlaceValue","place","calculateMajority","judgement","onlyFor","majority","Math","floor","competitorValues","countMajority","countSums","mark","sum","index","remaining","table","map","places","lookingFor","column","byMaxMajority","r","a","val","tableEntry","toString","filter","v","b","sortColumn","tableColumn","sortingByMajority","sortingBySum","group","klona","x","k","tmp","str","Object","prototype","call","constructor","hasOwnProperty","defineProperty","value","configurable","enumerable","writable","Set","forEach","add","Map","key","set","Date","RegExp","source","flags","lastIndex","buffer","calculateIncompleteMajority","setCount","competitorSet","markCount","distributeMissing","countGood","unset","goodOnes","badOnes","missingMarks","ones","sums","sortedOnes","markRow","pop","unsetPlace","iteration","possiblePlace","currentPlace","initMarks","JudgeStore","observable","results","undefined","setMark","competitor","judge","competitorRow","this","setCompetitors","count","min","setJudges","setDances","delete","confirm","valid","danceValid","d","data","window","localStorage","getItem","jsonData","JSON","parse","assign","autorun","stringify","setItem","delay","now","skatingDances","skating","dances","placeCount","placeSum","reduce","skatingJudgement","skatingTable","skatingPlaces","sortedGroups","tableCol","byCount","firstBySum","skating11Result","row","col","o","rule11","rule11Winner","calculateSkating","runInAction","store","observer","useEffect","document","title","FinalConfiguration","onClick","DanceView","SkatingResult","className","FinalResult","SkatingTableView","toJS","ResultTableView","props","useState","open","setOpen","MarkInput","size","isOpen","inpIdx","focus","idx","el","getElementById","select","myIdx","draggable","onDragStart","preventDefault","style","backgroundColor","onContextMenu","autoComplete","id","inputMode","pattern","onFocus","selectAll","onKeyDown","onInput","newValue","parseInt","currentTarget","possiblePlaceString","placeString","toLocaleString","fromVal","toVal","bordered","responsive","maxCols","max","ruleCols","cols","rowspan","startsWith","rowSpan","onChange","textAlign","disabled","Index","BaseLayout","Judge"],"sourceRoot":""}