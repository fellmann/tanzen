{"version":3,"file":"component---src-pages-distance-tsx-33b2ae4b6f9213857a60.js","mappings":"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","sources":["webpack://ggc-distance/./src/distance/Distance.tsx","webpack://ggc-distance/./src/pages/distance.tsx"],"sourcesContent":["import { observable } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Alert,\r\n  Container,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupText,\r\n} from \"reactstrap\";\r\n\r\ninterface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nconst parse = (s: string) => {\r\n  const ret = parseFloat(s.replace(\",\", \".\"));\r\n  if (ret >= 0 && ret < 100) return ret;\r\n  else if (ret <= 0) return 0;\r\n  else if (ret > 100) return 100;\r\n  else return 1;\r\n};\r\n\r\nconst store = observable({\r\n  width: \"18\",\r\n  height: \"10\",\r\n  innerDiameter: \"0,4\",\r\n  spaceBetween: \"2\",\r\n  spaceOuter: \"1\",\r\n});\r\n\r\nexport default observer(function Distance() {\r\n  useEffect(() => {\r\n    document.title = \"Corona-Abstandsrechner\";\r\n  }, []);\r\n\r\n  const rects: Point[] = [];\r\n  const linesX: number[] = [];\r\n  const linesY: number[] = [];\r\n\r\n  const innerDiameter = parse(store.innerDiameter);\r\n  const spaceBetween = parse(store.spaceBetween);\r\n  const spaceOuter = parse(store.spaceOuter);\r\n  const width = parse(store.width);\r\n  const height = parse(store.height);\r\n\r\n  for (let i = 1; i < width; i++) {\r\n    linesX.push(i);\r\n  }\r\n  for (let i = 1; i < height; i++) {\r\n    linesY.push(i);\r\n  }\r\n\r\n  const radius = (spaceBetween + innerDiameter) / 2;\r\n\r\n  const outerMargin = spaceOuter + innerDiameter / 2;\r\n\r\n  const rowDiff = Math.sqrt(3 * radius * radius);\r\n\r\n  let rowi = 0;\r\n  let minX = 1000,\r\n    maxX = 0;\r\n  let minY = 1000,\r\n    maxY = 0;\r\n  if (width < 100 && height < 100) {\r\n    for (let y = outerMargin; y + outerMargin <= height; y += rowDiff) {\r\n      rowi++;\r\n      const rowOffset = rowi % 2 === 1 ? 0 : radius;\r\n      for (\r\n        let x = outerMargin + rowOffset;\r\n        x + outerMargin <= width;\r\n        x += radius * 2\r\n      ) {\r\n        rects.push({ x, y });\r\n        if (minX > x) minX = x;\r\n        if (maxX < x) maxX = x;\r\n        if (minY > y) minY = y;\r\n        if (maxY < y) maxY = y;\r\n      }\r\n    }\r\n  }\r\n  const offsetX = (width - maxX - radius) / 2;\r\n  const offsetY = (height - maxY - radius) / 2;\r\n  return (\r\n    <Container>\r\n      <h1>Corona-Abstandsrechner</h1>\r\n      <form>\r\n        <div>\r\n          Fl√§che (m)\r\n          <InputGroup>\r\n            <Input\r\n              type=\"text\"\r\n              value={store.width}\r\n              onChange={(e) => (store.width = e.target.value)}\r\n            />\r\n            <InputGroupText>x</InputGroupText>\r\n            <Input\r\n              type=\"text\"\r\n              value={store.height}\r\n              onChange={(e) => (store.height = e.target.value)}\r\n            />\r\n            <InputGroupText>m</InputGroupText>\r\n          </InputGroup>\r\n        </div>\r\n        <div>\r\n          Abstand zwischen den Personen\r\n          <InputGroup>\r\n            <Input\r\n              type=\"text\"\r\n              value={store.spaceBetween}\r\n              onChange={(e) => (store.spaceBetween = e.target.value)}\r\n            />\r\n            <InputGroupText>m</InputGroupText>\r\n          </InputGroup>\r\n        </div>\r\n        <div>\r\n          Durchmesser Person/Paar\r\n          <InputGroup>\r\n            <Input\r\n              type=\"text\"\r\n              value={store.innerDiameter}\r\n              onChange={(e) => (store.innerDiameter = e.target.value)}\r\n            />\r\n            <InputGroupText>m</InputGroupText>\r\n          </InputGroup>\r\n        </div>\r\n        <div>\r\n          Abstand zur Wand\r\n          <InputGroup>\r\n            <Input\r\n              type=\"text\"\r\n              value={store.spaceOuter}\r\n              onChange={(e) => (store.spaceOuter = e.target.value)}\r\n            />\r\n            <InputGroupText>m</InputGroupText>\r\n          </InputGroup>\r\n        </div>\r\n      </form>\r\n      <div>\r\n        <Alert color=\"success\" className=\"mt-3\">\r\n          {rects.length} Personen\r\n        </Alert>\r\n      </div>\r\n      <svg\r\n        style={{ width: \"100%\", height: \"auto\" }}\r\n        viewBox={\"0 0 \" + width + \" \" + height}\r\n      >\r\n        <rect\r\n          x={0}\r\n          y={0}\r\n          width={width}\r\n          height={height}\r\n          fill=\"none\"\r\n          stroke=\"#000\"\r\n          strokeWidth=\"0.05\"\r\n        />\r\n        {rects.map((r, i) => (\r\n          <React.Fragment key={i}>\r\n            <circle\r\n              cx={r.x + offsetX}\r\n              cy={r.y + offsetY}\r\n              r={radius}\r\n              fill=\"none\"\r\n              stroke=\"#000\"\r\n              strokeWidth=\"0.05\"\r\n            />\r\n            <circle\r\n              cx={r.x + offsetX}\r\n              cy={r.y + offsetY}\r\n              r={innerDiameter / 2}\r\n              fill=\"#a00\"\r\n              stroke=\"#000\"\r\n              strokeWidth=\"0.05\"\r\n            />\r\n          </React.Fragment>\r\n        ))}\r\n        {linesX.map((i) => (\r\n          <line\r\n            key={i}\r\n            x1={i}\r\n            y1=\"0\"\r\n            x2={i}\r\n            y2={height}\r\n            stroke=\"#0003\"\r\n            strokeWidth=\"0.05\"\r\n          />\r\n        ))}\r\n        {linesY.map((i) => (\r\n          <line\r\n            key={i}\r\n            y1={i}\r\n            x1=\"0\"\r\n            y2={i}\r\n            x2={width}\r\n            stroke=\"#0003\"\r\n            strokeWidth=\"0.05\"\r\n          />\r\n        ))}\r\n      </svg>\r\n    </Container>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport BaseLayout from \"../components/BaseLayout\";\r\nimport Distance from \"../distance/Distance\";\r\n\r\nexport default function Index() {\r\n  return (\r\n    <BaseLayout title=\"Corona Abstandsrechner\">\r\n      <Distance />\r\n    </BaseLayout>\r\n  );\r\n}\r\n"],"names":["parse","s","ret","parseFloat","replace","store","observable","width","height","innerDiameter","spaceBetween","spaceOuter","observer","useEffect","document","title","rects","linesX","linesY","i","push","radius","outerMargin","rowDiff","Math","sqrt","rowi","minX","maxX","minY","maxY","y","x","offsetX","offsetY","type","value","onChange","e","target","color","className","length","style","viewBox","fill","stroke","strokeWidth","map","r","key","cx","cy","x1","y1","x2","y2","Index","BaseLayout","Distance"],"sourceRoot":""}